version 0.5.0 - 2013-01-25
==========================

There is lots of new stuff here but this release is backwards compatible. The
REST interface operates on a different default port and runs completey in 
paralell with the XML-RPC one. That said, REST is the way forward and all new
features will be added to that server.

New:

  * An all-new REST interface that simplifies access to pyapns's functionality.

    The XML-RPC server will be depreciated over the coming years. Next year it
    will be "depreciated" as in it will start giving off warnings and the year
    after it will likely be entirely removed.

  * REST interface uses Apple's new "enhanced" notification format which has 
    the ability to send back errors in the event Apple severs the connection 
    to pyapns (which can happen for a number of reasons).

  * A disconnection log which will pair disconnection events with the 
    notifications at fault. This will allow you to remove offending tokens
    and notifications.

  * The new Python client uses the very fine requests library which provides
    several advantages over the old XML-RPC library principally: connection
    keep-alive and reuse and connection pooling.

Fixed Bugs:

  * Fixed #31/#26 - Token blacklisting - we will not blacklist tokens as it's 
    not the job of this daemon to persist that kind of state. We however now 
    give you the tools to blacklist tokens should you wish to do so.

  * Fixed #14 - Apple Dropping Connection - this can happen for any number
    of reasons, by using the new REST service you can get an idea of why.

  * Fixed #10 - reprovisioning - while this issue isn't specifically to allow
    reprovisioning, the reason @mikeytrw wanted the feature was to replace
    certs, which is now possible.

  * Fixed #28 - sending multiple notifications after a disconnect fails - 
    simply fixed the way the deferred was handeled

version 0.4.0 - 2012-02-14
==========================

New:

  * Client interface methods have more explicit arguments and now take an 
    error callback.

    The `provision` `notify` and `feedback` methods in v0.3.2 would
    implicitly assume they should perform asynchronously if the `callback`
    argument was supplied. They would spin off a thread, later calling
    the callback.

    Now those methods take an `async` parameter, when True, will spin off
    the XML-RPC request in another thread, calling `callback(result)` when
    complete or `errback(exception)` if an error occurred.

  * Clients will now automatically try to re-provision themselves if `INITIAL`
    was provided during configuration. This helps, in case the server goes
    down, to be able to retry provisioning at least once.

Fixed bugs:

  * Fixed #21 - logging of full contents of file PEM file when providing the 
    whole thing in `provision()`

  * Fixed #25 - provide a wrapper for api functions which will automaticaly 
    try to reprovision should it encounter a `UknownAppID`.

Other:

  * Removed some of the redundant documentation from the setup.py file. 
    Eventually I want to move to sphynx docs. That software didn't really 
    exist in the same capacity in 2010 as it does now.

version 0.3.2 - 2010-08-05
==========================

Started tracking changes. This is the version that everyone has been using for
the past few years. 

